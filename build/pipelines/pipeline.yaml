apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  labels:
    app.kubernetes.io/instance: liberty-rest-app
    pipeline.openshift.io/type: kubernetes
  name: liberty-rest-app
  namespace: liberty-rest
spec:
  params:
  - name: git-url
    type: string
  - name: git-revision
    type: string
  - name: intermediate-image
    type: string
  - name: runtime-image
    type: string
  - name: STORAGE_DRIVER
    type: string
    default: vfs
  - name: url
    type: string
  - name: gitrepository_fullname
    type: string
  - name: commit_prior_revision
    type: string
  - name: commit_ref
    type: string
  - name: commit_id
    type: string
  - name: commit_date
    type: string
  - name: commit_message
    type: string
  - name: commit_author
    type: string
  - name: appName
    type: string
    default: liberty-rest
  - name: templateFileName
    type: string
    default: build/template/deploy-app-template.yaml
  - name: appGroup
    type: string
    default: Liberty
  - name: quay-io-account
    type: string
    default: ""
  - name: quay-io-repository
    type: string
    default: "liberty-rest"
  - name: quay-io-image-tag-name
    type: string
    default: "latest"
<<<<<<< Updated upstream
  tasks:
=======
  - name: publicName
    type: string
  tasks:
##------------------------------------------------------------------
# Git clone source code task
##------------------------------------------------------------------
  - name: git-clone-source
    params:
    - name: url
      value: $(params.git-url)
    - name: revision
      value: $(params.git-revision)
    - name: verbose
      value: 'false'
    - name: subdirectory
      value: source
    taskRef:
      kind: ClusterTask
      name:  git-clone
    workspaces:
    - name: output
      workspace: files
##------------------------------------------------------------------
# Build the jar file deliverable
##------------------------------------------------------------------
>>>>>>> Stashed changes
  - name: build
    params:
      - name: STORAGE_DRIVER
        value: $(params.STORAGE_DRIVER)
<<<<<<< Updated upstream
    resources:
      inputs:
      - name: source
        resource: app-source
      outputs:
=======
>>>>>>> Stashed changes
      - name: intermediate-image
        value: $(params.intermediate-image)
    taskRef:
      kind: Task
      name: build
  - name: create-runtime-image
    params:
      - name: STORAGE_DRIVER
        value: $(params.STORAGE_DRIVER)
      - name: gitrepository_url
        value: $(params.url)
      - name: gitrepository_fullname
        value: $(params.gitrepository_fullname)
      - name: commit_prior_revision
        value: $(params.commit_prior_revision)
      - name: commit_ref
        value: $(params.commit_ref)
      - name: commit_id
        value: $(params.commit_id)
      - name: commit_date
        value: $(params.commit_date)
      - name: commit_message
        value: $(params.commit_message)
      - name: commit_author
        value: $(params.commit_author)
      - name: pipelineRunName
        value: $(context.pipelineRun.name)
      - name: pipelineName
        value: $(context.pipeline.name)
<<<<<<< Updated upstream
    resources:
      inputs:
=======
      - name: publicName
        value: $(params.publicName)
      - name: appName
        value: $(params.appName)
      - name: baseImage
        value: $(params.baseImage)
      - name: sourceCommitTag
        value: "$(tasks.git-clone-source.results.commit)"
>>>>>>> Stashed changes
      - name: intermediate-image
        value: $(params.intermediate-image)
      - name: runtime-image
        value: $(params.runtime-image)
    taskRef:
      kind: Task
      name: create-runtime-image
    runAfter:
<<<<<<< Updated upstream
      - build
=======
    - build
    workspaces:
    - name: files
      workspace: files
##------------------------------------------------------------------
# Clear the old deployed application resources ready for a
# redeployment
##------------------------------------------------------------------
>>>>>>> Stashed changes
  - name: clear-resources
    params:
      - name: appName
        value: $(params.appName)
    taskRef:
      kind: Task
      name: clear-resources
    runAfter:
<<<<<<< Updated upstream
      - build
=======
    - create-runtime-image
##------------------------------------------------------------------
# Deploy the application locally from the image stream
##------------------------------------------------------------------
>>>>>>> Stashed changes
  - name: deploy-application
    resources:
      inputs:
      - name: source
        resource: app-source
      - name: runtime-image
        resource: runtime-image
    params:
      - name: templateFileName
        value: $(params.templateFileName)
      - name: appName
        value: $(params.appName)
      - name: appGroup
        value: $(params.appGroup)
    taskRef:
      kind: Task
<<<<<<< Updated upstream
      name: oc-process-deployment-template
=======
      name: oc-deploy-application
>>>>>>> Stashed changes
    runAfter:
      - create-runtime-image
      - clear-resources
<<<<<<< Updated upstream
=======
    workspaces:
    - name: files
      workspace: resources
##------------------------------------------------------------------
# Push the new runtime image to quay.io
##------------------------------------------------------------------
>>>>>>> Stashed changes
  - name: push-image-to-quay
    params:
      - name: quay-io-account
        value: $(params.quay-io-account)
      - name: quay-io-repository
        value: $(params.quay-io-repository)
      - name: quay-io-image-tag-name
<<<<<<< Updated upstream
        value: $(params.quay-io-image-tag-name)
      - name: STORAGE_DRIVER
        value: $(params.STORAGE_DRIVER)
    resources:
      inputs:
      - name: runtime-image
        resource: runtime-image
    taskRef:
      kind: Task
      name: push-image-to-quay
    runAfter:
      - create-runtime-image
  finally:
  - name: clear-buildah-repo-end
    params:
      - name: STORAGE_DRIVER
        value: $(params.STORAGE_DRIVER)
    taskRef:
      kind: Task
      name: clear-buildah-repo
=======
        value: $(tasks.create-runtime-image.results.new-tag)
      - name: STORAGE_DRIVER
        value: $(params.STORAGE_DRIVER)
      - name: runtime-image
        value: $(params.runtime-image)
    taskRef:
      kind: Task
      name: push-image-to-quay

    runAfter:
      - create-runtime-image
    workspaces:
    - name: files
      workspace: files
##------------------------------------------------------------------
# Workspace definitions
##------------------------------------------------------------------
  workspaces:
  - name: files
  - name: resources
>>>>>>> Stashed changes
